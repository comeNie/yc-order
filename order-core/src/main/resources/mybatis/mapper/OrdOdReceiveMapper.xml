<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.yc.order.dao.mapper.interfaces.OrdOdReceiveMapper" >
  <resultMap id="BaseResultMap" type="com.ai.yc.order.dao.mapper.bo.OrdOdReceive" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="PERSON_ID" property="personId" jdbcType="BIGINT" />
    <result column="RECEIVE_FOLLOW_ID" property="receiveFollowId" jdbcType="BIGINT" />
    <result column="INTERPER_ID" property="interperId" jdbcType="VARCHAR" />
    <result column="INTERPER_NAME" property="interperName" jdbcType="VARCHAR" />
    <result column="INTERPER_FEE" property="interperFee" jdbcType="BIGINT" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="RECEIVE_TIME" property="receiveTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PERSON_ID, RECEIVE_FOLLOW_ID, INTERPER_ID, INTERPER_NAME, INTERPER_FEE, TEL, 
    RECEIVE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceiveCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ord_od_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from ord_od_receive
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from ord_od_receive
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceiveCriteria" >
    delete from ord_od_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceive" >
    insert into ord_od_receive (ID, PERSON_ID, RECEIVE_FOLLOW_ID, 
      INTERPER_ID, INTERPER_NAME, INTERPER_FEE, 
      TEL, RECEIVE_TIME)
    values (#{id,jdbcType=BIGINT}, #{personId,jdbcType=BIGINT}, #{receiveFollowId,jdbcType=BIGINT}, 
      #{interperId,jdbcType=VARCHAR}, #{interperName,jdbcType=VARCHAR}, #{interperFee,jdbcType=BIGINT}, 
      #{tel,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceive" >
    insert into ord_od_receive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="personId != null" >
        PERSON_ID,
      </if>
      <if test="receiveFollowId != null" >
        RECEIVE_FOLLOW_ID,
      </if>
      <if test="interperId != null" >
        INTERPER_ID,
      </if>
      <if test="interperName != null" >
        INTERPER_NAME,
      </if>
      <if test="interperFee != null" >
        INTERPER_FEE,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="receiveTime != null" >
        RECEIVE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=BIGINT},
      </if>
      <if test="receiveFollowId != null" >
        #{receiveFollowId,jdbcType=BIGINT},
      </if>
      <if test="interperId != null" >
        #{interperId,jdbcType=VARCHAR},
      </if>
      <if test="interperName != null" >
        #{interperName,jdbcType=VARCHAR},
      </if>
      <if test="interperFee != null" >
        #{interperFee,jdbcType=BIGINT},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null" >
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceiveCriteria" resultType="java.lang.Integer" >
    select count(*) from ord_od_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ord_od_receive
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.personId != null" >
        PERSON_ID = #{record.personId,jdbcType=BIGINT},
      </if>
      <if test="record.receiveFollowId != null" >
        RECEIVE_FOLLOW_ID = #{record.receiveFollowId,jdbcType=BIGINT},
      </if>
      <if test="record.interperId != null" >
        INTERPER_ID = #{record.interperId,jdbcType=VARCHAR},
      </if>
      <if test="record.interperName != null" >
        INTERPER_NAME = #{record.interperName,jdbcType=VARCHAR},
      </if>
      <if test="record.interperFee != null" >
        INTERPER_FEE = #{record.interperFee,jdbcType=BIGINT},
      </if>
      <if test="record.tel != null" >
        TEL = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveTime != null" >
        RECEIVE_TIME = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ord_od_receive
    set ID = #{record.id,jdbcType=BIGINT},
      PERSON_ID = #{record.personId,jdbcType=BIGINT},
      RECEIVE_FOLLOW_ID = #{record.receiveFollowId,jdbcType=BIGINT},
      INTERPER_ID = #{record.interperId,jdbcType=VARCHAR},
      INTERPER_NAME = #{record.interperName,jdbcType=VARCHAR},
      INTERPER_FEE = #{record.interperFee,jdbcType=BIGINT},
      TEL = #{record.tel,jdbcType=VARCHAR},
      RECEIVE_TIME = #{record.receiveTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceive" >
    update ord_od_receive
    <set >
      <if test="personId != null" >
        PERSON_ID = #{personId,jdbcType=BIGINT},
      </if>
      <if test="receiveFollowId != null" >
        RECEIVE_FOLLOW_ID = #{receiveFollowId,jdbcType=BIGINT},
      </if>
      <if test="interperId != null" >
        INTERPER_ID = #{interperId,jdbcType=VARCHAR},
      </if>
      <if test="interperName != null" >
        INTERPER_NAME = #{interperName,jdbcType=VARCHAR},
      </if>
      <if test="interperFee != null" >
        INTERPER_FEE = #{interperFee,jdbcType=BIGINT},
      </if>
      <if test="tel != null" >
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null" >
        RECEIVE_TIME = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.yc.order.dao.mapper.bo.OrdOdReceive" >
    update ord_od_receive
    set PERSON_ID = #{personId,jdbcType=BIGINT},
      RECEIVE_FOLLOW_ID = #{receiveFollowId,jdbcType=BIGINT},
      INTERPER_ID = #{interperId,jdbcType=VARCHAR},
      INTERPER_NAME = #{interperName,jdbcType=VARCHAR},
      INTERPER_FEE = #{interperFee,jdbcType=BIGINT},
      TEL = #{tel,jdbcType=VARCHAR},
      RECEIVE_TIME = #{receiveTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>